###########################################################################################
####                                                                                  #####
####                                    WARNING                                       #####
#### Do not delete any field, if you want delete debug level for log, set it to false #####
####                                                                                  #####
###########################################################################################
[orchestrator]
# Set 0.0.0.0 to listen on all addresses
ip = 0.0.0.0
port = 9000

# When neither the incoming graph is associated to a domain, nor its VNFs,
# the graph is deployed on this "default" domain
default_domain = UN1

# Timeout after that the orchestrator will stop waiting for a response (in seconds)
timeout = 90

# In this mode, service graph will not be really instantiated, but the nf-fg created
# will be logged in the FrogOrchestrator.log.
debug_mode = false

[doubledecker]
dd_name = orchestrator
dd_customer = public
broker_address = tcp://127.0.0.1:5555
#broker_address = tcp://10.0.0.1:5555
dd_keyfile = config/public-keys.json

[log]
# Location of the log file
log_file=FrogOrchestrator.log

# Log levels
verbose = true
debug = true

[db]
# Mysql DB
connection = mysql+pymysql://orchestrator:ORCH_DBPASS@127.0.0.1:3306/orchestrator

[templates]
# Define the source where the templates can be achieved.
# This source can be 'vnf-repository' or 'file' (that identify the file system)
source = file

# This is considered in case source=file
path = templates/

# This is considered in case source=vnf-repository
# Define the url where the templates will be requested
repository_url = http://127.0.0.1:8080/v1/VNF/

[flowrule]
# Define the default priority for the flows in the NF-FG
default_priority = 20000

[switch]
# Template of a VNF that acts as a switch.
#template = http://130.192.225.193:9292/v2/images/483ae2c1-9c8b-49c8-bfdb-b9626a768a18/file
template = switch.json

switch_l2_name = Switch, data-switch
switch_l2_control_name = Control_Switch, switch-control

